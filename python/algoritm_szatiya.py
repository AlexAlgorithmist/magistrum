from time import time_ns as t



Tran_mas = [[" ", 0], ["!", 0], ["#", 0], ["$", 0], ["%", 0], ["&", 0], ["'", 0], ["(", 0], [")", 0], ["*", 0], ["+", 0],
            [",", 0], ["-", 0], [".", 0], ["/", 0], ["0", 0], ["1", 0], ["2", 0], ["3", 0], ["4", 0], ["5", 0], ["6", 0],
            ["7", 0], ["8", 0], ["9", 0], [":", 0], [";", 0], ["<", 0], ["=", 0], [">", 0], ["?", 0], ["@", 0], ["A", 0],
            ["B", 0], ["D", 0], ["E", 0], ["F", 0], ["G", 0], ["H", 0], ["I", 0], ["J", 0], ["K", 0], ["L", 0], ["M", 0],
            ["N", 0], ["O", 0], ["P", 0], ["Q", 0], ["R", 0], ["S", 0], ["T", 0], ["U", 0], ["V", 0], ["W", 0], ["X", 0],
            ["Y", 0], ["Z", 0], ["[", 0], ["]", 0], ["^", 0], ["_", 0], ["`", 0], ["a", 0], ["b", 0], ["c", 0], ["d", 0],
            ["e", 0], ["f", 0], ["g", 0], ["h", 0], ["i", 0], ["j", 0], ["k", 0], ["l", 0], ["m", 0], ["n", 0], ["o", 0],
            ["p", 0], ["q", 0], ["r", 0], ["s", 0], ["t", 0], ["u", 0], ["w", 0], ["x", 0], ["y", 0], ["z", 0], ["{", 0],
            ["|", 0], ["}", 0], ["~", 0], ["А", 0], ["Б", 0], ["В", 0], ["Г", 0], ["Д", 0], ["Е", 0], ["Ё", 0], ["Ж", 0],
            ["З", 0], ["И", 0], ["Й", 0], ["К", 0], ["Л", 0], ["М", 0], ["Н", 0], ["О", 0], ["П", 0], ["Р", 0], ["С", 0],
            ["Т", 0], ["У", 0], ["Ф", 0], ["К", 0], ["Х", 0], ["Ц", 0], ["Ч", 0], ["Ш", 0], ["Щ", 0], ["Ъ", 0], ["Ы", 0],
            ["Ь", 0], ["Э", 0], ["Ю", 0], ["Я", 0], ["а", 0], ["б", 0], ["в", 0], ["г", 0], ["д", 0], ["е", 0], ["ё", 0],
            ["ж", 0], ["з", 0], ["и", 0], ["й", 0], ["к", 0], ["л", 0], ["м", 0], ["н", 0], ["о", 0], ["п", 0], ["р", 0],
            ["с", 0], ["т", 0], ["у", 0], ["ф", 0], ["к", 0], ["ц", 0], ["ч", 0], ["ш", 0], ["щ", 0], ["ъ", 0], ["ы", 0],
            ["ь", 0], ["э", 0], ["ю", 0], ["я", 0], ['"', 0], ["v", 0], ["’", 0], ["C", 0]]

Tran = {" ": "0", "!": "1", "#": "2", "$": "3", "%": "4", "&": "5", "'": "6", "(": "7", ")": "8", "*": "9", "+": "10",
        ",": "11", "-": "12", ".": "13", "/": "14", "0": "15", "1": "16", "2": "17", "3": "18", "4": "19", "5": "20",
        "6": "21", "7": "22", "8": "23", "9": "24", ":": "25", ";": "26", "<": "27", "=": "28", ">": "29", "?": "30",
        "@": "31", "A": "32", "B": "33", "D": "34", "E": "35", "F": "36", "G": "37", "H": "38", "I": "39", "J": "40",
        "K": "41", "L": "42", "M": "43", "N": "44", "O": "45", "P": "46", "Q": "47", "R": "48", "S": "49", "T": "50",
        "U": "51", "V": "52", "W": "53", "X": "54", "Y": "55", "Z": "56", "[": "57", "]": "58", "^": "59", "_": "60",
        "`": "61", "a": "62", "b": "63", "c": "64", "d": "65", "e": "66", "f": "67", "g": "68", "h": "69", "i": "70",
        "j": "71", "k": "72", "l": "73", "m": "74", "n": "75", "o": "76", "p": "77", "q": "78", "r": "79", "s": "80",
        "t": "81", "u": "82", "w": "83", "x": "84", "y": "85", "z": "86", "{": "87", "|": "88", "}": "89", "~": "90",
        "А": "91", "Б": "92", "В": "93", "Г": "94", "Д": "95", "Е": "96", "Ё": "97", "Ж": "98", "З": "99", "И": "100",
        "Й": "101", "К": "102", "Л": "103", "М": "104", "Н": "105", "О": "106", "П": "107", "Р": "108", "С": "109",
        "Т": "110", "У": "111", "Ф": "112", "К": "113", "Х": "114", "Ц": "115", "Ч": "116", "Ш": "117", "Щ": "118",
        "Ъ": "119", "Ы": "120", "Ь": "121", "Э": "122", "Ю": "123", "Я": "124", "а": "125", "б": "126", "в": "127",
        "г": "128", "д": "129", "е": "130", "ё": "131", "ж": "132", "з": "133", "и": "134", "й": "135", "к": "136",
        "л": "137", "м": "138", "н": "139", "о": "140", "п": "141", "р": "142", "с": "143", "т": "144", "у": "145",
        "ф": "146", "к": "147", "ц": "148", "ч": "149", "ш": "150", "щ": "151", "ъ": "152", "ы": "153", "ь": "154",
        "э": "155", "ю": "156", "я": "157", '"': "158", "v": "159", "’": "160", "C": "161"}



def bin_(Inp=int):
    if Inp != int:return None

    Out_Mas = []
    
    Ost = str(int(Inp % 2))
    
    Out_Mas.append(Ost)
    
    while Inp >= 2:
        Inp /= 2
        Ost = str(int(Inp % 2))
        Out_Mas.append(Ost)
    
    Out = ""
    
    while len(Out_Mas) > 0: Out += Out_Mas.pop()

    return int(Out)


def Get_Id(s=str, ch=str):
    N = 0
    for ch1 in s:
        if ch1 is ch:
            return N
        N += 1
    return None



file_name = input('>>>')
f = open(file_name, "r+", 1, "UTF-8")



file = f.read()
s = "\n"



code = """
tim = t()
ch_n_all = 0

for ch in file:
    ch_n_all += 1
    if ch in Tran:
        ch_n = int(Tran[ch])
        mas_ch = Tran_mas[ch_n]
        mas_ch[1] += 1
        Tran_mas[ch_n] = mas_ch
        del(ch_n)

print(f"Считывание и расшифрофка файла: {(t() - tim) / 10e9}с.")

Tran_mas_ = []

tim1 = t()

for m in Tran_mas:
    if m[1] is 0: pass
    else: Tran_mas_.append(m)

print(f"Удаление неиспользуеммых символов: {(t() - tim1) / 10e9}с.")

len_ = len(Tran_mas_)

tim2 = t()

for k in range(len_ - 1):
    for i in range(len_ - 1 - k):
        m_i = Tran_mas_[i]
        m_ii = Tran_mas_[i + 1]
        if m_i[1] < m_ii[1]: Tran_mas_[i], Tran_mas_[i + 1] = Tran_mas_[i + 1], Tran_mas_[i]

print(f"Сортировка сиволов по количеству: {(t() - tim2) / 10e9}с.")

tim3 = t()

Tran_s = ""

for m in Tran_mas_: Tran_s += m[0]


File_Out = ""

for m in Tran_mas_: File_Out += f"{m[0]}{s}"

File_Out += s

print(f"Мелкие операции: {(t() - tim3) / 10e9}с.")
tim4 = t()

ch_p = ""
n = 0
ch_b = 0
tim0 = t()

for ch in file:
    if ch is ch_p:
        n += 1
    else:
        What_Add = ""
        Id_ch = Get_Id(Tran_s, ch)
        ch_b += 1
        if t() - tim0 > 10e9:
            print(f"{ch_b} / {ch_n_all}")
            tim0 = t()
        if Id_ch is not None:
            if n != 0: What_Add += f"{str(n)} "
            What_Add += f"{bin_(Id_ch)}  "
        else: What_Add += ch
        n = 0
        File_Out += What_Add

print(f"Сжатие файла: {(t() - tim4) / 10e9}с.")
tim5 = t()

#f.white(File_Out)

print(f"Запись файла: {(t() - tim5) / 10e9}с.")

"""
exec(code)



print(f"Всего: {(t() - tim) / 10e9}с.")
#print(File_Out)